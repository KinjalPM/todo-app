{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _classCallCheck from\"/Users/kinjalmehta/Desktop/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/kinjalmehta/Desktop/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/kinjalmehta/Desktop/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/kinjalmehta/Desktop/to-do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';var TodoItem=/*#__PURE__*/function(_Component){_inherits(TodoItem,_Component);var _super=_createSuper(TodoItem);function TodoItem(){var _this;_classCallCheck(this,TodoItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.getStyle=function(){return{background:'#f4f4f4',padding:'10px',borderBottom:'1px #ccc dotted',textDecoration:_this.props.todo.completed?'line-through':'none'};};return _this;}_createClass(TodoItem,[{key:\"render\",value:function render(){var _this$props$todo=this.props.todo,id=_this$props$todo.id,title=_this$props$todo.title;return/*#__PURE__*/_jsx(\"div\",{style:this.getStyle(),children:/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",onChange:this.props.markedComplete.bind(this,id)}),' ',title,/*#__PURE__*/_jsx(\"button\",{onClick:this.props.delTodo.bind(this,id),style:btnStyle,children:\"x\"})]})});}}]);return TodoItem;}(Component);//PropTypes\nvar btnStyle={background:'red',color:'white',border:'none',padding:'5px 8px',borderRadius:'50%',cursor:'pointer',float:'right'};export default TodoItem;","map":{"version":3,"sources":["/Users/kinjalmehta/Desktop/to-do/src/components/TodoItem.js"],"names":["React","Component","TodoItem","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","id","title","markedComplete","bind","delTodo","btnStyle","color","border","borderRadius","cursor","float"],"mappings":"oqBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,GAGMC,CAAAA,Q,mUACFC,Q,CAAW,UAAM,CACb,MAAO,CACHC,UAAU,CAAE,SADT,CAEHC,OAAO,CAAE,MAFN,CAGHC,YAAY,CAAE,iBAHX,CAIHC,cAAc,CAAE,MAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,CAA2B,cAA3B,CAA4C,MAJzD,CAAP,CAMH,C,2EAIQ,sBACc,KAAKF,KAAL,CAAWC,IADzB,CACEE,EADF,kBACEA,EADF,CACKC,KADL,kBACKA,KADL,CAEL,mBACI,YAAK,KAAK,CAAE,KAAKT,QAAL,EAAZ,uBACI,kCACI,cAAO,IAAI,CAAC,UAAZ,CAAuB,QAAQ,CAAE,KAAKK,KAAL,CAAWK,cAAX,CAA0BC,IAA1B,CAA+B,IAA/B,CAAoCH,EAApC,CAAjC,EADJ,CAEK,GAFL,CAGKC,KAHL,cAII,eAAQ,OAAO,CAAE,KAAKJ,KAAL,CAAWO,OAAX,CAAmBD,IAAnB,CAAwB,IAAxB,CAA6BH,EAA7B,CAAjB,CAAmD,KAAK,CAAEK,QAA1D,eAJJ,GADJ,EADJ,CAUH,C,sBAxBkBf,S,EA2BvB;AAOA,GAAMe,CAAAA,QAAQ,CAAG,CACbZ,UAAU,CAAE,KADC,CAEba,KAAK,CAAE,OAFM,CAGbC,MAAM,CAAE,MAHK,CAIbb,OAAO,CAAE,SAJI,CAKbc,YAAY,CAAE,KALD,CAMbC,MAAM,CAAE,SANK,CAObC,KAAK,CAAE,OAPM,CAAjB,CAWA,cAAenB,CAAAA,QAAf","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n    getStyle = () => {\n        return {\n            background: '#f4f4f4',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ?'line-through' : 'none'\n        }\n    }\n\n \n\n    render() {\n        const {id,title} = this.props.todo;\n        return (\n            <div style={this.getStyle()}>\n                <p>\n                    <input type=\"checkbox\" onChange={this.props.markedComplete.bind(this,id)}/> \n                    {' '}\n                    {title}\n                    <button onClick={this.props.delTodo.bind(this,id)} style={btnStyle}>x</button>\n                </p>\n            </div>\n        )\n    }\n}\n\n//PropTypes\nTodoItem.propTypes = {\n    todos: PropTypes.array.isRequired,\n    markedComplete: PropTypes.func.isRequired,\n    delTodo: PropTypes.func.isRequired\n}\n\nconst btnStyle = {\n    background: 'red',\n    color: 'white',\n    border: 'none',\n    padding: '5px 8px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n\n\nexport default TodoItem"]},"metadata":{},"sourceType":"module"}