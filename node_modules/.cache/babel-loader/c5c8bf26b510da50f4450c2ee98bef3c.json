{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/kinjalmehta/Desktop/to-do/src/App.js\";\nimport React from 'react';\nimport { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\nimport { v4 as uuid } from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n\n    this.markedComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.delTodo = id => {\n      axios.delete('http://jsonplaceholder.typicode.com/todos/${id}').then(res => this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      }));\n    };\n\n    this.addTodo = title => {\n      axios.post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false\n      }).then(res => {\n        res.data.id = uuid();\n        this.setState({\n          todos: [...this.state.todos, res.data]\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://jsonplaceholder.typicode.com/todos?_limit=10').then(res => this.setState({\n      todos: res.data\n    }));\n  } // toggle complete \n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            render: props => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(AddTodo, {\n                addTodo: this.addTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Todos, {\n                todos: this.state.todos,\n                markedComplete: this.markedComplete,\n                delTodo: this.delTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/about\",\n            component: About\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kinjalmehta/Desktop/to-do/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","v4","uuid","axios","App","state","todos","markedComplete","id","setState","map","todo","completed","delTodo","delete","then","res","filter","addTodo","title","post","data","componentDidMount","get","render","props"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport './App.css';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/pages/About';\n import { v4 as uuid } from 'uuid';\nimport axios from 'axios';\n\nclass App extends Component{\n  \n  state = {\n    todos: [ ]\n  }\n\n  componentDidMount(){\n    axios.get('http://jsonplaceholder.typicode.com/todos?_limit=10')\n     .then(res => this.setState({todos: res.data}))\n  }\n\n  // toggle complete \n  markedComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id){\n        todo.completed = !todo.completed;\n      }\n      return todo;\n    }) }); \n}\n\n//delete todo\ndelTodo = (id) => {\n  axios.delete('http://jsonplaceholder.typicode.com/todos/${id}')\n  .then(res => this.setState({todos: [...this.state.todos.filter(todo => todo.id\n    !== id)] }));\n  \n}\n\n// add todo\naddTodo = title => {\n  axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed: false\n    })\n    .then(res => {\n      res.data.id = uuid();\n      this.setState({ todos: [...this.state.todos, res.data] });\n    });\n};\n\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props =>(\n              <React.Fragment>\n                  <AddTodo addTodo={this.addTodo}/>\n                  <Todos todos={this.state.todos} markedComplete={this.markedComplete} \n                  delTodo={this.delTodo}/>\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About}/>\n          </div>\n        </div>\n      </Router>\n    );  \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}